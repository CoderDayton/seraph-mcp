# Seraph MCP â€” Pre-commit Hooks Configuration
#
# Enforces code quality standards before commits.
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      # Run the linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # Run the formatter
      - id: ruff-format

  # MyPy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic>=2.0.0
          - types-redis
        args: [--strict, --ignore-missing-imports]
        files: ^src/

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Prevent large files from being committed
      - id: check-added-large-files
        args: ['--maxkb=1000']
      # Check for files that would conflict in case-insensitive filesystems
      - id: check-case-conflict
      # Check for merge conflicts
      - id: check-merge-conflict
      # Check JSON files
      - id: check-json
      # Check TOML files
      - id: check-toml
      # Check YAML files
      - id: check-yaml
        args: ['--unsafe']  # Allow custom tags
      # Ensure files end with newline
      - id: end-of-file-fixer
      # Remove trailing whitespace
      - id: trailing-whitespace
      # Detect private keys
      - id: detect-private-key
      # Check for AWS credentials
      - id: detect-aws-credentials
        args: ['--allow-missing-credentials']

  # Security scanning with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        files: ^src/

  # Secret scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: (\.lock$|package-lock\.json$|poetry\.lock$|uv\.lock$)

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        files: \.(md|markdown)$

  # Python docstring validation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        files: ^src/
        args:
          - --convention=google
          - --add-ignore=D100,D104,D107

# Configuration for specific hooks
default_language_version:
  python: python3.11

# Exclude patterns (applies to all hooks unless overridden)
exclude: |
  (?x)^(
      \.git/|
      \.github/|
      \.venv/|
      venv/|
      env/|
      __pycache__/|
      \.pytest_cache/|
      \.mypy_cache/|
      \.ruff_cache/|
      build/|
      dist/|
      .*\.egg-info/|
      uv\.lock$
  )

# Fail fast - stop after first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'
